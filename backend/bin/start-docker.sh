#!/bin/bash

set -e

CONTAINER_NAME="sea"
IMAGE_NAME="api"
PORT="8000"
VOLUME_MAPPING="$(pwd)/backend:/app/backend"

echo "üîÑ –†–µ—Å—Ç–∞—Ä—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER_NAME..."

if docker ps -a --format '{{.Names}}' | grep -q "^$CONTAINER_NAME$"; then
    echo "üî™ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $CONTAINER_NAME..."
    docker kill $CONTAINER_NAME 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º kill"
    
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º $CONTAINER_NAME..."
    docker rm -f $CONTAINER_NAME || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å $CONTAINER_NAME"; exit 1; }
else
    echo "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ"
fi

if [ -f "Dockerfile" ]; then
    echo "üõ†Ô∏è –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ $IMAGE_NAME..."
    docker build -t $IMAGE_NAME . || { echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞"; exit 1; }
else
    echo "‚ÑπÔ∏è Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑ $IMAGE_NAME"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ç–≤–æ–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º $CONTAINER_NAME —Å volume –∏ –ø–æ—Ä—Ç–æ–º $PORT..."
docker run -d \
    --name $CONTAINER_NAME \
    -p $PORT:8000 \
    -v $VOLUME_MAPPING \
    $IMAGE_NAME || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å $CONTAINER_NAME"; exit 1; }

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –∑–∞–ø—É—â–µ–Ω:"
docker ps --filter "name=$CONTAINER_NAME" --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"